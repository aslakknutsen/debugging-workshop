apiVersion: v1
kind: List
items:
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      app.openshift.io/connects-to: inventory-mariadb
    labels:
      name: inventory
      app: coolstore
      app.kubernetes.io/part-of: coolstore
    name: inventory
  spec:
    replicas: 0
    selector:
      name: inventory 
      app: coolstore
    revisionHistoryLimit: 2
    strategy:
      activeDeadlineSeconds: 21600
      resources:
        limits:
          cpu: 500m
          memory: 2Gi
        requests:
          cpu: 500m
          memory: 1Gi
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 3600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          sidecar.istio.io/inject: "true"
        labels:
          name: inventory 
          app: coolstore
      spec:
        containers:
        - args:
          - -c
          - until $(curl -o /dev/null -s -I -f http://127.0.0.1:15000); do echo \"Waiting
            for Istio Sidecar...\"; sleep 1; done; sleep 10; ./application -Dquarkus.http.host=0.0.0.0
          command:
          - /bin/bash
          env:
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: quay.io/mcouliba/inventory-quarkus:3.1_debugging
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - curl
              - -f
              - http://127.0.0.1:8080/node
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: inventory
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 9779
            name: prometheus
            protocol: TCP
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - curl
              - -f
              - http://127.0.0.1:8080/node
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 500m
              memory: 2Gi
            requests:
              cpu: 500m
              memory: 1Gi
          securityContext:
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /deployments/config
            name: volume-app-config
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: inventory
          name: volume-app-config
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/port: "9779"
      prometheus.io/scrape: "true"
    labels:
      app: inventory
      expose: "true"
    name: inventory
  spec:
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: inventory
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  data:
    application.properties: |
      quarkus.datasource.url=jdbc:mariadb://inventory-mariadb:3306/inventorydb2
      quarkus.datasource.username=inventory
      quarkus.datasource.password=inventory
  kind: ConfigMap
  metadata:
    name: inventory